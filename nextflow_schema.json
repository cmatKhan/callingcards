{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/callingcards/master/nextflow_schema.json",
    "title": "nf-core/callingcards pipeline parameters",
    "description": "An automated processing pipeline for mammalian bulk calling cards experiments",
    "type": "object",
    "$defs": {
        "hops_counting_options": {
            "title": "Hops counting options",
            "type": "object",
            "description": "Hops quantification related parameters",
            "default": "",
            "properties": {
                "min_mapq": {
                    "type": "integer",
                    "default": 10,
                    "description": "Values with less than or equal to this mapq value will not be counted as transpositions. Defaults to 10"
                }
            }
        },
        "qc_options": {
            "title": "QC options",
            "type": "object",
            "description": "Quality Control metric related parameters",
            "default": "",
            "properties": {
                "rseqc_modules": {
                    "type": "string",
                    "default": "read_distribution",
                    "description": "Specify the RSeQC modules to run.",
                    "hidden": true
                }
            }
        },
        "alignment_options": {
            "title": "Alignment options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "aligner": {
                    "type": "string",
                    "default": "bwamem2",
                    "description": "Choose one of the configured aligners. Defaults to bwamem2.",
                    "enum": ["bwa", "bwamem2", "bowtie", "bowtie2"]
                }
            }
        },
        "read_processing_options": {
            "title": "Read processing options",
            "type": "object",
            "description": "Options to control how reads are processed prior to alignment",
            "default": "",
            "properties": {
                "r1_bc_pattern": {
                    "type": "string",
                    "description": "UMITools compliant read 1 barcode pattern. See UMITools documentation"
                },
                "r2_bc_pattern": {
                    "type": "string",
                    "description": "UMITools compliant read 2 barcode pattern. See UMITools documentation"
                },
                "r1_crop": {
                    "type": "integer",
                    "description": "If reads are single_end, this option allows the user to crop the R1 read. This occurs after trimming"
                },
                "gzip_concatenated_fastq": {
                    "type": "boolean",
                    "description": "Set to true to gzip fastq files after concatenating (assuming the fastq have been split -- see split_fastq_chunk_size). Default is false, and generally houl should not need to change this as the concat fastqs are intermediate files, easier for downstream processes to use unzipped, and will be deleted when you delete th work directory.",
                    "hidden": true
                },
                "split_fastq_by_size": {
                    "type": "integer",
                    "description": "split_fastq_by_size or split_fastq_by_part may be set, but not both at the same time. These parameters control how many parts the input fastq files are split into for parallel processing on a cluster. See seqkit split2 for more information. By default, split_fastq_by_part is set to 10, which will split every fastq file into 10 parts. If you wish to use split_fastq_by_size, set split_fastq_by_part to null to nullify the default value."
                },
                "split_fastq_by_part": {
                    "type": "integer",
                    "default": 10,
                    "description": "split_fastq_by_size or split_fastq_by_part may be set, but not both at the same time. These parameters control how many parts the input fastq files are split into for parallel processing on a cluster. See seqkit split2 for more information. By default, split_fastq_by_part is set to 10, which will split every fastq file into 10 parts. If you wish to use split_fastq_by_size, set split_fastq_by_part to null to nullify the default value."
                }
            }
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["datatype", "input", "outdir"],
            "properties": {
                "datatype": {
                    "type": "string",
                    "description": "This determines which workflow to run based on the organism and method from which the data originates. Current options are 'yeast' and 'mammals'",
                    "enum": ["yeast", "mammals"]
                },
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/callingcards/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                },
                "save_genome_intermediate": {
                    "type": "boolean",
                    "description": "Set to true to save intermediate files from the PREPARE_GENOME step, eg genome indicies for a given aligner",
                    "hidden": true
                },
                "save_sequence_intermediate": {
                    "type": "boolean",
                    "description": "Set to true to save intermediate files from the PREPARE_READS step, eg chunked and demultiplexed fastq files",
                    "hidden": true
                },
                "save_alignment_intermediate": {
                    "type": "boolean",
                    "description": "set to true to save intermediate files form the ALIGN step, eg un-indexed and unsorted bam files",
                    "hidden": true
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                },
                "gtf": {
                    "type": "string",
                    "description": "Path to GTF annotation file."
                },
                "regions_mask": {
                    "type": "string",
                    "description": "A bed file which specifies regions to hard mask in genome fasta",
                    "pattern": "^\\S+\\.bed$",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "fasta_index": {
                    "type": "string",
                    "description": "Path to FASTA genome file.",
                    "pattern": "^\\S+\\.fai$",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "hidden": true
                },
                "additional_fasta": {
                    "type": "string",
                    "description": "Additional sequences which will be appended to the genomic fasta file after masking",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "format": "file-path",
                    "mimetype": "text/plain"
                },
                "bwa_index": {
                    "type": "string",
                    "description": "path to the bwaaln index. only used if aligner is bwaaln. if the aligner is bwaaln and this is not provided, the index is created in the pipeline",
                    "format": "directory-path",
                    "hidden": true
                },
                "bwamem2_index": {
                    "type": "string",
                    "description": "path to the bwamem2 index. only used if aligner is bwamem2. if the aligner is bwamem2 and this is not provided, the index is created in the pipeline",
                    "format": "directory-path",
                    "hidden": true
                },
                "bowtie_index": {
                    "type": "string",
                    "description": "path to the bowtie index. only used if aligner is bowtie. if the aligner is bowtie and this is not provided, the index is created in the pipeline",
                    "format": "directory-path",
                    "hidden": true
                },
                "bowtie2_index": {
                    "type": "string",
                    "description": "path to the bowtie2 index. only used if aligner is bowtie2. if the aligner is bowtie2 and this is not provided, the index is created in the pipeline",
                    "format": "directory-path",
                    "hidden": true
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/hops_counting_options"
        },
        {
            "$ref": "#/$defs/qc_options"
        },
        {
            "$ref": "#/$defs/alignment_options"
        },
        {
            "$ref": "#/$defs/read_processing_options"
        },
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
